/* Autogenerated with kurento-module-creator */

#ifndef __CAR_DETECTOR_INTERNAL_HPP__
#define __CAR_DETECTOR_INTERNAL_HPP__

#include "CarDetector.hpp"

namespace kurento
{
class JsonSerializer;
}

namespace kurento
{
class MediaPipeline;
} /* kurento */

namespace kurento
{
namespace module
{
namespace cardetector
{

class CarDetectorConstructor
{
public:
  CarDetectorConstructor() = default;
  ~CarDetectorConstructor() = default;

  void Serialize (JsonSerializer &serializer);

  std::shared_ptr<MediaPipeline> getMediaPipeline ();

  void setMediaPipeline (std::shared_ptr<MediaPipeline> mediaPipeline) {
    this->mediaPipeline = mediaPipeline;
  }

  std::string getPath ();

  void setPath (const std::string &path) {
    this->path = path;
  }

  std::string getIdCam ();

  void setIdCam (const std::string &idCam) {
    this->idCam = idCam;
  }

  double getScaleFactor ();

  void setScaleFactor (double scaleFactor) {
    this->scaleFactor = scaleFactor;
  }

  int getMinNeighbors ();

  void setMinNeighbors (int minNeighbors) {
    this->minNeighbors = minNeighbors;
  }

  int getWidth ();

  void setWidth (int width) {
    this->width = width;
  }

  int getHeight ();

  void setHeight (int height) {
    this->height = height;
  }

private:
  std::shared_ptr<MediaPipeline> mediaPipeline;
  std::string path;
  std::string idCam;
  double scaleFactor;
  int minNeighbors;
  int width;
  int height;
};

} /* cardetector */
} /* module */
} /* kurento */

#endif /*  __CAR_DETECTOR_INTERNAL_HPP__ */
