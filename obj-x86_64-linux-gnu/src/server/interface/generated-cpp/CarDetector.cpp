/* Autogenerated with kurento-module-creator */

#include "CarDetector.hpp"
#include <mutex>

namespace kurento
{
namespace module
{
namespace cardetector
{

static std::vector<std::string> hierarchyCarDetector;
std::once_flag initFlagCarDetector;

static void
initHierarchy ()
{
  hierarchyCarDetector.emplace_back("kurento.OpenCVFilter");
  hierarchyCarDetector.emplace_back("kurento.Filter");
  hierarchyCarDetector.emplace_back("kurento.MediaElement");
  hierarchyCarDetector.emplace_back("kurento.MediaObject");
}

const std::vector<std::string> &
CarDetector::getHierarchy () const
{
  std::call_once (initFlagCarDetector,initHierarchy);
  return hierarchyCarDetector;
}

const std::string&
CarDetector::getType () const {
  static std::string typeName = "CarDetector";

  return typeName;
}

const std::string&
CarDetector::getQualifiedType () const {
  static std::string qualifiedTypeName = getModule() + "." + getType();

  return qualifiedTypeName;
}

const std::string&
CarDetector::getModule () const {
  static std::string moduleName =  "cardetector";

  return moduleName;
}

} /* cardetector */
} /* module */
} /* kurento */
