/* Autogenerated with kurento-module-creator */

#ifndef __CAR_DETECTOR_HPP__
#define __CAR_DETECTOR_HPP__

#include <json/json.h>
#include <jsonrpc/JsonRpcException.hpp>
#include <memory>
#include <vector>
#include "OpenCVFilter.hpp"
#include "CarsDetected.hpp"
#include <sigc++/sigc++.h>

namespace kurento
{
namespace module
{
namespace cardetector
{
class CarDetector;
} /* cardetector */
} /* module */
} /* kurento */

namespace kurento
{
class JsonSerializer;
void Serialize (std::shared_ptr<kurento::module::cardetector::CarDetector> &object, JsonSerializer &serializer);
}

namespace kurento
{
class MediaPipeline;
} /* kurento */

namespace kurento
{
namespace module
{
namespace cardetector
{
class CarDetector : public virtual OpenCVFilter
{

public:
  CarDetector() = default;
  ~CarDetector() override = default;


  const std::string &getType() const override;
  const std::string &getQualifiedType() const override;
  const std::string &getModule() const override;
  const std::vector<std::string> &getHierarchy() const override;

  void Serialize(JsonSerializer &serializer) override = 0;

  virtual std::string getPath () = 0;
  virtual void setPath (const std::string &path) = 0;

  virtual std::string getIdCam () = 0;
  virtual void setIdCam (const std::string &idCam) = 0;

  virtual double getScaleFactor () = 0;
  virtual void setScaleFactor (double scaleFactor) = 0;

  virtual int getMinNeighbors () = 0;
  virtual void setMinNeighbors (int minNeighbors) = 0;

  virtual int getWidth () = 0;
  virtual void setWidth (int width) = 0;

  virtual int getHeight () = 0;
  virtual void setHeight (int height) = 0;

};

} /* cardetector */
} /* module */
} /* kurento */

#endif /*  __CAR_DETECTOR_HPP__ */
